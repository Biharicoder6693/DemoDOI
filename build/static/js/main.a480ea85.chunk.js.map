{"version":3,"sources":["components/AppHeader.js","components/ZipResponse.js","components/Zip.js","containers/AppContainer.js","App.js","index.js"],"names":["AppHeader","className","ZipResponse","props","responseData","cod","setTimeout","clearResponse","message","name","main","temp","pressure","humidity","temp_min","temp_max","weather","description","Zip","useState","validationError","setValidationError","jsx","type","id","placeholder","onKeyPress","event","key","test","target","value","onZipChange","validate","AppContainer","setResponseData","zipValue","a","async","fetch","res","json","App","ReactDOM","render","document","getElementById"],"mappings":"0MASeA,MAPf,WAEI,OAAO,6BACH,uBAAGC,UAAU,gCAAb,iC,uCCqDOC,MAxDf,SAAqBC,GAEjB,OAA0B,OAAvBA,EAAMC,cAAgD,KAAvBD,EAAMC,aAC7B,KAGmB,QAA3BD,EAAMC,aAAaC,KAA4C,QAA3BF,EAAMC,aAAaC,KACtDC,YAAW,WAAaH,EAAMI,kBAAmB,KAE7C,yBAAKN,UAAU,YACX,yBAAKA,UAAU,eAAgBE,EAAMC,aAAaI,WAKhC,MAA3BL,EAAMC,aAAaC,IAEd,yBAAKJ,UAAU,YACX,2BAAOA,UAAU,gCACb,+BACI,4BACI,oCACA,4BAAKE,EAAMC,aAAaK,OAE5B,4BACI,2CACA,4BAAKN,EAAMC,aAAaM,KAAKC,OAEjC,4BACI,wCACA,4BAAKR,EAAMC,aAAaM,KAAKE,WAEjC,4BACI,wCACA,4BAAKT,EAAMC,aAAaM,KAAKG,WAEjC,4BACI,iDACA,4BAAKV,EAAMC,aAAaM,KAAKI,WAEjC,4BACI,iDACA,4BAAKX,EAAMC,aAAaM,KAAKK,WAEjC,4BACI,0CACA,4BAAKZ,EAAMC,aAAaY,QAAQ,GAAGC,iBAOpD,MCPIC,MA9Cf,SAAaf,GAAQ,IAAD,EAE8BgB,mBAAS,MAFvC,mBAETC,EAFS,KAEQC,EAFR,KAgBhB,OACI,yBAAKpB,UAAU,YACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,2BAAOqB,IAAI,QAAX,mKAMA,2BACIC,KAAK,OACLtB,UAAU,eACVuB,GAAG,MACHC,YAAY,wBACZC,WAAY,SAACC,GACS,UAAdA,EAAMC,KA5BjB,SAACD,GACS,UACME,KAAKF,EAAMG,OAAOC,QAK3CV,EAAmB,IACnBlB,EAAM6B,YAAYL,EAAMG,OAAOC,SAJ/BV,EAAmB,qCACnBlB,EAAMI,iBAwBc0B,CAASN,QAM7B,yBAAK1B,UAAU,YACX,yBAAKA,UAAU,qBAAf,IAAsCmB,MCLvCc,MAhCf,SAAsB/B,GAAQ,IAAD,EAEegB,mBAAS,IAFxB,mBAElBf,EAFkB,KAEJ+B,EAFI,KAYnB5B,EAAgB,WAClB4B,EAAgB,KAGpB,OACI,6BACI,yBAAKlC,UAAU,YACX,yBAAKA,UAAU,aACf,kBAAC,EAAD,CAAK+B,YAhBO,SAAOI,GAAP,iBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEFE,IAAM,4GAAD,OAA6GH,EAA7G,SAFH,cAEdI,EAFc,kBAAAH,EAAA,MAGDG,EAAIC,QAHH,OAGdA,EAHc,OAKpBN,EAAgBM,GALI,sCAgBuBlC,cAAeA,IAClD,yBAAKN,UAAU,cAEnB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACf,kBAAC,EAAD,CAAaG,aAAcA,EAAcG,cAAeA,IACxD,yBAAKN,UAAU,gB,MChBhByC,MATf,WACE,OACE,yBAAKzC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLN0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a480ea85.chunk.js","sourcesContent":["import React from 'react';\n\nfunction AppHeader() {\n\n    return <div>\n        <p className=\"p-3 text-light h3 bg-primary\">Current weather by zip code</p>\n    </div>\n}\n  \nexport default AppHeader","import React from 'react';\n\nfunction ZipResponse(props) {\n\n    if(props.responseData === null || props.responseData === '') {\n        return null;\n    }\n\n    if(props.responseData.cod === '400' || props.responseData.cod === '404') {\n        setTimeout(function() { props.clearResponse();}, 5000);\n        return (\n            <div className=\"col-sm-8\">\n                <div className=\"text-danger\">{ props.responseData.message }</div>\n            </div>\n        );\n    }\n\n    if(props.responseData.cod === 200) {\n        return (\n            <div className=\"col-sm-8\">\n                <table className=\"table table-info table-hover\">\n                    <tbody>\n                        <tr>\n                            <td>City</td>\n                            <td>{props.responseData.name}</td>\n                        </tr>\n                        <tr>\n                            <td>Temperature</td>\n                            <td>{props.responseData.main.temp}</td>\n                        </tr>\n                        <tr>\n                            <td>Pressure</td>\n                            <td>{props.responseData.main.pressure}</td>\n                        </tr>\n                        <tr>\n                            <td>Humidity</td>\n                            <td>{props.responseData.main.humidity}</td>\n                        </tr>\n                        <tr>\n                            <td>Temperature (Min)</td>\n                            <td>{props.responseData.main.temp_min}</td>\n                        </tr>\n                        <tr>\n                            <td>Temperature (Max)</td>\n                            <td>{props.responseData.main.temp_max}</td>\n                        </tr>\n                        <tr>\n                            <td>Conditions</td>\n                            <td>{props.responseData.weather[0].description}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    return null\n}\n  \nexport default ZipResponse","import React, { useState } from 'react';\n\nfunction Zip(props) {\n\n    const [validationError, setValidationError] = useState(null);\n\n    const validate = (event) => {\n        const zipCodePattern = /^\\d{5}$/;\n        const valid = zipCodePattern.test(event.target.value);\n        if (!valid) {\n            setValidationError('* should be a 5 digit number only');\n            props.clearResponse();\n        } else {\n            setValidationError('');\n            props.onZipChange(event.target.value);\n        }\n    };\n\n    return (\n        <div className=\"col-sm-4\">\n            <div className=\"row\">\n                <div className=\"col-sm-10\">\n                    <style jsx=\"true\">{`\n                        .form-control::-webkit-input-placeholder {\n                            color: #ddd;\n                        }\n                    `}\n                    </style>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"usr\" \n                        placeholder=\"US Zip Code (5 digit)\"\n                        onKeyPress={(event) => {\n                            if (event.key === \"Enter\") {\n                                validate(event);\n                            }\n                        }}\n                    ></input>   \n                </div>\n            </div>\n            <div className=\"pl-3 row\">\n                <div className=\"text-danger small\"> { validationError }</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Zip","import React, { useState } from 'react';\nimport fetch from 'isomorphic-unfetch'\nimport ZipResponse from '../components/ZipResponse';\nimport Zip from '../components/Zip';\n\nfunction AppContainer(props) {\n\n    const [responseData, setResponseData] = useState('');\n\n    const handleZipChange = async (zipValue) => {\n        //console.log(`--------- fetchData called zip:${zipValue}`)\n        const res = await fetch(`http://api.openweathermap.org/data/2.5/weather?appid=6b7b471967dd0851d0010cdecf28f829&units=imperial&zip=${zipValue},us`)\n        const json = await res.json()\n        //console.log(json);\n        setResponseData(json);\n    }\n\n    const clearResponse = () => {\n        setResponseData('');\n    }\n\n    return (\n        <div>\n            <div className=\"row mt-4\">\n                <div className=\"col-sm-4\"></div>\n                <Zip onZipChange={handleZipChange} clearResponse={clearResponse}/>\n                <div className=\"col-sm-4\"></div>\n            </div>\n            <div className=\"row mt-4\">\n                <div className=\"col-sm-2\"></div>\n                <ZipResponse responseData={responseData} clearResponse={clearResponse}/>\n                <div className=\"col-sm-2\"></div>\n            </div>    \n        </div>\n    );\n}\n  \nexport default AppContainer","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppHeader from './components/AppHeader';\nimport AppContainer from './containers/AppContainer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <AppContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}